{"version":3,"sources":["reportWebVitals.js","MyComponent.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MyComponent","props","inputChangeHandler","event","setState","inputName","target","value","state","serverResponse","val","this","type","placeholder","onChange","onClick","fetch","response","json","data","setResponse","returnName","catch","error","console","log","readOnly","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCLOQ,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,mBAAqB,SAAAC,GACjB,EAAKC,SAAS,CACVC,UAAWF,EAAMG,OAAOC,SAR5B,EAAKC,MAAQ,CACTH,UAAW,GACXI,eAAgB,IALL,E,+CAenB,SAAYC,GACRC,KAAKP,SAAS,CACVK,eAAgBC,M,oBAIxB,WAAU,IAAD,OACL,OACI,8BACI,iCACI,mEACA,uBACIE,KAAO,OACPC,YAAc,aACdN,MAAUI,KAAKH,MAAMH,UACrBS,SAAYH,KAAKT,qBAGrB,wBACIU,KAAO,SAEPG,QACI,WACIC,MAAM,aAAe,EAAKR,MAAMH,WAC/BX,MAAK,SAAAuB,GAAQ,OAAIA,EAASC,UAC1BxB,MAAK,SAAAyB,GACF,EAAKC,YAAYD,EAAKE,eAEzBC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OAX5B,oBAgBS,uBAET,sDACA,0BACIhB,MAASI,KAAKH,MAAMC,eACpBiB,UAAQ,a,GAvDSC,aCIzCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzC,M","file":"static/js/main.5c5f1192.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react'\r\n\r\nexport default class MyComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            inputName: '',\r\n            serverResponse: ''\r\n        }\r\n    }\r\n    \r\n    inputChangeHandler = event => {\r\n        this.setState({\r\n            inputName: event.target.value\r\n        })\r\n    }\r\n\r\n    setResponse(val){\r\n        this.setState({\r\n            serverResponse: val\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form>\r\n                    <label>Your Input Request to Server: </label>\r\n                    <input \r\n                        type = \"text\" \r\n                        placeholder = \"First Name\"\r\n                        value =  {this.state.inputName}\r\n                        onChange = {this.inputChangeHandler}\r\n                    />\r\n\r\n                    <button\r\n                        type = \"button\"\r\n\r\n                        onClick = {\r\n                            () => {\r\n                                fetch(\"/identify/\" + this.state.inputName)\r\n                                .then(response => response.json())\r\n                                .then(data => {\r\n                                    this.setResponse(data.returnName)\r\n                                })\r\n                                .catch(error => {\r\n                                    console.log(error)\r\n                                })\r\n                            }\r\n                    }>\r\n                        Submit\r\n                    </button><br/>\r\n\r\n                    <label>Server Response: </label>\r\n                    <textarea\r\n                        value = {this.state.serverResponse}\r\n                        readOnly\r\n                    ></textarea>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport MyComponent from './MyComponent';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}